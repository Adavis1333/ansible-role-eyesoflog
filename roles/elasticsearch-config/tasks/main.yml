---
# - name: Ensure libselinux-python on CentOS 6.x
#   become: yes
#   yum: name=libselinux-python state=present update_cache=yes

- set_fact: "es_major_version={{ es_version.split('.')[0] }}.x"
  when:
      - es_major_version is undefined
  tags:
      - always

- name: Set the defaults here otherwise they can't be overriden in the same play if the role is called twice
  set_fact:
    es_repo_name: "{{ es_major_version }}"


- name: RedHat - add Elasticsearch repo
  become: yes
  template:
    src: 'elasticsearch.repo'
    dest: '/etc/yum.repos.d/elasticsearch-{{ es_version }}.repo'

- name: RedHat - Install Elasticsearch
  become: yes
  yum:
    name: '{{ es_package_name }}{% if es_version is defined and es_version != ""  %}-{{ es_version }}{% endif %}'
    state: present
    update_cache: yes
  when: es_use_repository and not ansible_check_mode
  retries: 5
  delay: 10
  environment:
    ES_PATH_CONF: "{{ es_conf_dir }}"

- name: RedHat - Install Elasticsearch from URL
  become: yes
  yum:
    name: '{% if es_custom_package_url is defined %}{{ es_custom_package_url }}{% else %}{{ es_rpm_url }}{% endif %}'
    state: present
  when: not es_use_repository
  register: elasticsearch_install_from_package

# Elasticsearch Configuration
- name: Create Configuration Directory
  become: yes
  file:
    path: "{{ es_conf_dir }}"
    state: directory
    owner: "{{ es_user }}"
    group: "{{ es_group }}"
    mode: "2750"

#Create required directories
- name: Create Others Directories
  become: yes
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ es_user }}"
    group: "{{ es_group }}"
    mode: "2750"
  with_items:
    - "{{ es_log_dir }}"
    - "{{ es_data_dirs }}"

#Copy the config template
- name: Copy Configuration File
  become: yes
  template:
    src: templates/elasticsearch.yml.j2
    dest: "{{ es_conf_dir }}/elasticsearch.yml"
    owner: "{{ es_user }}"
    group: "{{ es_group }}"
    mode: "660"
    force: yes
  register: system_change

#Copy the default file
- name: Copy Default File
  become: yes
  template:
    src: "{{ es_config_default }}"
    dest: "{{ default_file }}"
    owner: "{{ es_user }}"
    group: "{{ es_group }}"
    mode: "660"
    force: yes

- name: set fact use_system_d
  set_fact: use_system_d={{ (ansible_distribution == 'Debian' and ansible_distribution_version is version('8', '>=')) or (ansible_distribution in ['RedHat','CentOS'] and ansible_distribution_version is version('7', '>=')) or (ansible_distribution == 'Ubuntu' and ansible_distribution_version is version('15', '>=')) or (ansible_distribution == 'Amazon' and ansible_distribution_version is version('2', '>=')) }}

- name: set fact m_lock_enabled
  set_fact: m_lock_enabled={{ es_config['bootstrap.memory_lock'] is defined and es_config['bootstrap.memory_lock'] == True }}

#Copy the systemd specific file if systemd is installed
- when: use_system_d is defined
  become: yes
  block:
    - name: Make sure destination dir exists
      file:
        path: "{{  sysd_config_file | dirname }}"
        state: directory
        mode: "755"

    - name: Copy specific ElasticSearch Systemd config file
      template:
        src: "override.conf.j2"
        dest: "{{ sysd_config_file }}"
        owner: "{{ es_user }}"
        group: "{{ es_group }}"
        mode: "644"
        force: yes
      notify:
      - reload systemd configuration

- name: ensure templates dir is created
  file:
    path: "{{ es_conf_dir }}/templates"
    state: directory
    owner: "{{ es_user }}"
    group: "{{ es_group }}"
    mode: "2750"

- name: Copy templates to elasticsearch
  copy: src={{ item }} dest={{ es_conf_dir }}/templates owner=root group={{ es_group }} mode=0660
  register: load_templates
  with_fileglob:
    - "{{ es_templates_fileglob | default('') }}"

- name: Install templates
  uri:
    url: "{{ es_api_uri }}/_template/{{item | filename}}"
    method: PUT
    status_code: 200
    user: "{{es_api_basic_auth_username | default(omit)}}"
    password: "{{es_api_basic_auth_password | default(omit)}}"
    force_basic_auth: yes
    body_format: json
    body: "{{ lookup('file', item) }}"
    validate_certs: "{{ es_validate_certs }}"
  when: load_templates.changed and es_start_service
  with_fileglob:
    - "{{ es_templates_fileglob | default('') }}"
  run_once: True

- name: Copy jvm.options File
  become: yes
  template:
    src: "{{ es_config_jvm }}"
    dest: "{{ es_conf_dir }}/jvm.options"
    owner: "{{ es_user }}"
    group: "{{ es_group }}"
    mode: "660"
    force: yes

- name: Copy log4j2.properties File
  become: yes
  template:
    src: "{{ es_config_log4j2 }}"
    dest: "{{ es_conf_dir }}/log4j2.properties"
    owner: "{{ es_user }}"
    group: "{{ es_group }}"
    mode: "660"
    force: yes
  when: es_config_log4j2 != ''



